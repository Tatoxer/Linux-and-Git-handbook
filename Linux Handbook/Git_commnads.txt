https://ru.hexlet.io/courses/intro_to_git/lessons/git-basics/theory_unit;



git add  - подготавливает изменённый или добавленный файл к коммиту. Без её выполнения сделать коммит не получится;

git commit - фиксирует изменения в репозитории. Ключ -m позволяет добавить короткое описание коммита;

git status - проверка, что репозиторий инициализирован и находится в работоспособном состоянии;

git config --global user.name "name" - инициализация имени;

git config --global user.email "e@mail" - инициализация email;

git log - история часто используется "git log -p" - он выводит непрерывную разницу (diff) всех изменений по коммитам;

git diff - показывает различия между репозиторием и вашей рабочей копией.
Её полезно запускать тогда, когда вы хотите посмотреть изменения сделанные в рабочей копии, но не добавленные для коммита командой 'git add';

git show - просмотр изменений одного коммита;

git rm - удаляет данные из репозитория;

git reset path/to/file переводит файл из состояния staged в modified;

git checkout -- path/to/file переводит файл из состояния modified в unmodified, то есть по сути эта команда сбрасывает изменения;

git branch - показывает все доступные ветки, но также и отмечает текущую символом '*';

git merge - сливает ветки между собой. Выполняется из той ветки, в которую мы сливаем изменения, а аргументом передаётся имя той ветки, которую мы сливаем;

git init - инициализирует репозиторий в текущей папке;

git push - выполняет отправку новых коммитов из текущего репозитория в удалённый;

git push --set-upstream origin master - Эта команда выполняет два действия: устанавливает отслеживание и отправляет изменения. Она выполняется ровно один раз, далее можно отправлять изменения набирая просто git push;

git pull - получает изменения, сделанные в удалённом репозитории, а затем слитвает их со своими;

git merge - обхединяет изменения меджу двумя ветвями;